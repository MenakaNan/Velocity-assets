============General==================
executionTimeout="240"============Steps====================
Procedure main
	1 #open STC Lab Server REST connection
		useFieldsInCommand="false"
		1.1 open s2 project://v_STC_Driver/session_profiles/stcRest.ffsp
			transferableToolId="com.fnfr.itest.applications.webservices.restful"
			transferableType="com.fnfr.itest.applications.webservices.properties.restful.RESTfulSessionProperties"
			useFieldsInCommand="false"
	2 #set random value to be used for session number
		useFieldsInCommand="false"
		2.1 eval set rndNum  [math.round [expr 10000 * [math.rand]]]
			analyze
				none 
				message Information:Creating session $rndNum on STC Lab Server
			useFieldsInCommand="false"
	3 #create session on STC Lab Server
		useFieldsInCommand="false"
		3.1 DELETE s2 sessions/$rndNum%20-%20velocity.driver
			action="sessions/$rndNum%20-%20velocity.driver"
		3.2 POST s2 sessions
			analyze
				query fn:count(mapped/Json/session_id)
				assert $value == 1.0
					When True
						DeclareExecutionIssue OK:Established session with Lab Server
						PassTestIfNotAlreadyFailed 
					When False
						DeclareExecutionIssue Error:Failed to establish session with Lab Server
						FailTest 
						ExitExecution 
			estimatedStepExecutionTime="19.649"
			message="userid=velocity.driver&sessionname=$rndNum"
			action="sessions"
	4 #connect to STC chassis through the Lab Server
		useFieldsInCommand="false"
		4.1 PUT s2 connections/[param property_ipAddress]
			analyze
				query fn:count(mapped/Regex/Body/line/pattern1/group1)
				assert $value == 1.0
					When True
						DeclareExecutionIssue OK:Connected to STC chassis at [param property_ipAddress]
						PassTestIfNotAlreadyFailed 
					When False
						DeclareExecutionIssue Error:Failed to connect to STC chassis at [param property_ipAddress]
						FailTest 
						CallProcedure deleteLabServerConnection -rndNum $rndNum
						ExitExecution 
			estimatedStepExecutionTime="1.441"
			action="connections/[param property_ipAddress]"
			inherit="false"
			transferableToolId="com.fnfr.itest.applications.webservices.restful"
			memberClasses
				item="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry"
			item(transferableToolId="com.fnfr.itest.applications.webservices.restful")(transferableType="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry")(header="X-STC-API-Session")(header.inherit="false")(value="$rndNum - velocity.driver")(value.inherit="false")
	5 #run each called procedure called from Velocity
		useFieldsInCommand="false"
		5.1 for {set i 0} {$i < [param call_count]} {incr i}
			useFieldsInCommand="false"
			5.1.1 #create a list out of the contents of call_$i
				useFieldsInCommand="false"
				5.1.1.1 eval set cl [split [param call_$i]]
					useFieldsInCommand="false"
			5.1.2 #set a variable called proc to the first element in the list and set params to the remaining list elements
				useFieldsInCommand="false"
				5.1.2.1 eval set params [lassign $cl proc]
					useFieldsInCommand="false"
			5.1.3 #message to user
				analyze
					none 
					message Information:Calling a proc called $proc with these parameters: $params
				analyze
					none 
					message Information:Resource IP address: [param property_ipAddress]
				useFieldsInCommand="false"
			5.1.4 #call the procedure with ordered and named arguments
				useFieldsInCommand="false"
				5.1.4.1 call $proc $params -rndNum $rndNum
					useFieldsInCommand="false"
					emulation
					response="{
"ports":[{"name":"port0","status":"online","container":"Chassis EmulatedL1Switch/Blade EmulatedL1Switch.1"},{"name":"port1","status":"online","container":"Chassis EmulatedL1Switch/Blade EmulatedL1Switch.1"}]
}"
					responseType="text"
					structuredData="
<structure xmlns:map="http://www.fnfr.com/svt/mapping">
    <isEmpty>false</isEmpty>
</structure>
"
					aliases
						isEmpty
							queryFormatString=".//isEmpty"
					duration="13.0"
	6 #close STC Lab Server session
		useFieldsInCommand="false"
		6.1 call deleteLabServerConnection -rndNum $rndNum
			useFieldsInCommand="false"
	7 #return JSON payload to Velocity
		useFieldsInCommand="false"
		7.1 return $ret
Procedure getProperties
	1 GET s2 chassis/[param property_ipAddress]
		analyze
			query mapped/Json/FirmwareVersion
			store chassisOS[return properties/Software_Version]
		analyze
			query mapped/Json/SerialNum
			store serialno[return properties/Serial_Number]
		analyze
			query mapped/Json/PartNum
			store model[return properties/Model]
		analyze
			query mapped/Json/SlotCount
			store slotCount
		estimatedStepExecutionTime="0.222"
		action="chassis/[param property_ipAddress]"
		inherit="false"
		transferableToolId="com.fnfr.itest.applications.webservices.restful"
		memberClasses
			item="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry"
		item(transferableToolId="com.fnfr.itest.applications.webservices.restful")(transferableType="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry")(header="X-STC-API-Session")(header.inherit="false")(value="$rndNum - velocity.driver")(value.inherit="false")
	2 call getPortList -slotCount $slotCount -rndNum $rndNum
		analyze
			regex \\S+ false
			store jsonPortListtrue[return ports]
		analyze
			query moduleList()
			store moduleList
		useResponseMapLibraryApplicability="false"
		responseMap="response_maps/getUnwrappedPorts.ffrm"
		useResponseMapLibraryFromSession="false"
		useFieldsInCommand="false"
		emulation
		response="{"name":"//10.108.32.17/1/1","status":"online","container":"slot1_cm-1g-d12_E10210259/group1_E10210259"} {"name":"//10.108.32.17/1/2","status":"online","container":"slot1_cm-1g-d12_E10210259/group1_E10210259"} {"name":"//10.108.32.17/1/3","status":"online","container":"slot1_cm-1g-d12_E10210259/group2_E10210259"} {"name":"//10.108.32.17/1/4","status":"online","container":"slot1_cm-1g-d12_E10210259/group2_E10210259"} {"name":"//10.108.32.17/1/5","status":"online","container":"slot1_cm-1g-d12_E10210259/group3_E10210259"} {"name":"//10.108.32.17/1/6","status":"online","container":"slot1_cm-1g-d12_E10210259/group3_E10210259"} {"name":"//10.108.32.17/1/7","status":"online","container":"slot1_cm-1g-d12_E10210259/group4_E10210259"} {"name":"//10.108.32.17/1/8","status":"online","container":"slot1_cm-1g-d12_E10210259/group4_E10210259"} {"name":"//10.108.32.17/1/9","status":"online","container":"slot1_cm-1g-d12_E10210259/group5_E10210259"} {"name":"//10.108.32.17/1/10","status":"online","container":"slot1_cm-1g-d12_E10210259/group5_E10210259"} {"name":"//10.108.32.17/1/11","status":"online","container":"slot1_cm-1g-d12_E10210259/group6_E10210259"} {"name":"//10.108.32.17/1/12","status":"online","container":"slot1_cm-1g-d12_E10210259/group6_E10210259"} {"name":"//10.108.32.17/2/1","status":"online","container":"slot2_cm-1g-d12_E10220545/group1_E10220545"} {"name":"//10.108.32.17/2/2","status":"online","container":"slot2_cm-1g-d12_E10220545/group1_E10220545"} {"name":"//10.108.32.17/2/3","status":"online","container":"slot2_cm-1g-d12_E10220545/group2_E10220545"} {"name":"//10.108.32.17/2/4","status":"online","container":"slot2_cm-1g-d12_E10220545/group2_E10220545"} {"name":"//10.108.32.17/2/5","status":"online","container":"slot2_cm-1g-d12_E10220545/group3_E10220545"} {"name":"//10.108.32.17/2/6","status":"online","container":"slot2_cm-1g-d12_E10220545/group3_E10220545"} {"name":"//10.108.32.17/2/7","status":"online","container":"slot2_cm-1g-d12_E10220545/group4_E10220545"} {"name":"//10.108.32.17/2/8","status":"online","container":"slot2_cm-1g-d12_E10220545/group4_E10220545"} {"name":"//10.108.32.17/2/9","status":"online","container":"slot2_cm-1g-d12_E10220545/group5_E10220545"} {"name":"//10.108.32.17/2/10","status":"online","container":"slot2_cm-1g-d12_E10220545/group5_E10220545"} {"name":"//10.108.32.17/2/11","status":"online","container":"slot2_cm-1g-d12_E10220545/group6_E10220545"} {"name":"//10.108.32.17/2/12","status":"online","container":"slot2_cm-1g-d12_E10220545/group6_E10220545"}"
		responseType="text"
		structuredData="
<structure xmlns:map="http://www.fnfr.com/svt/mapping">
    <isEmpty>false</isEmpty>
</structure>
"
		aliases
			isEmpty
				queryFormatString=".//isEmpty"
		duration="2.3"
Procedure getPorts
	1 GET s2 chassis/[param property_ipAddress]
		analyze
			query mapped/Json/SlotCount
			store slotCount
		estimatedStepExecutionTime="0.222"
		action="chassis/[param property_ipAddress]"
		inherit="false"
		transferableToolId="com.fnfr.itest.applications.webservices.restful"
		memberClasses
			item="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry"
		item(transferableToolId="com.fnfr.itest.applications.webservices.restful")(transferableType="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry")(header="X-STC-API-Session")(header.inherit="false")(value="$rndNum - velocity.driver")(value.inherit="false")
	2 call getPortList -slotCount $slotCount -rndNum $rndNum
		analyze
			regex \\S+ full_match false
			store jsonPortListtrue[return ports]
		analyze
			query fn:count(//container)
			assert $value > 0
				When False
					Eval set moduleList unknown
					SkipRemainingRules 
		analyze
			query moduleList()
			store moduleList
		useResponseMapLibraryApplicability="false"
		responseMap="response_maps/getUnwrappedPorts.ffrm"
		useResponseMapLibraryFromSession="false"
		useFieldsInCommand="false"
		emulation
		response="{"name":"//10.108.32.17/1/1","status":"online","container":"slot1_cm-1g-d12_E10210259/group1_E10210259"} {"name":"//10.108.32.17/1/2","status":"online","container":"slot1_cm-1g-d12_E10210259/group1_E10210259"} {"name":"//10.108.32.17/1/3","status":"online","container":"slot1_cm-1g-d12_E10210259/group2_E10210259"} {"name":"//10.108.32.17/1/4","status":"online","container":"slot1_cm-1g-d12_E10210259/group2_E10210259"} {"name":"//10.108.32.17/1/5","status":"online","container":"slot1_cm-1g-d12_E10210259/group3_E10210259"} {"name":"//10.108.32.17/1/6","status":"online","container":"slot1_cm-1g-d12_E10210259/group3_E10210259"} {"name":"//10.108.32.17/1/7","status":"online","container":"slot1_cm-1g-d12_E10210259/group4_E10210259"} {"name":"//10.108.32.17/1/8","status":"online","container":"slot1_cm-1g-d12_E10210259/group4_E10210259"} {"name":"//10.108.32.17/1/9","status":"online","container":"slot1_cm-1g-d12_E10210259/group5_E10210259"} {"name":"//10.108.32.17/1/10","status":"online","container":"slot1_cm-1g-d12_E10210259/group5_E10210259"} {"name":"//10.108.32.17/1/11","status":"online","container":"slot1_cm-1g-d12_E10210259/group6_E10210259"} {"name":"//10.108.32.17/1/12","status":"online","container":"slot1_cm-1g-d12_E10210259/group6_E10210259"} {"name":"//10.108.32.17/2/1","status":"online","container":"slot2_cm-1g-d12_E10220545/group1_E10220545"} {"name":"//10.108.32.17/2/2","status":"online","container":"slot2_cm-1g-d12_E10220545/group1_E10220545"} {"name":"//10.108.32.17/2/3","status":"online","container":"slot2_cm-1g-d12_E10220545/group2_E10220545"} {"name":"//10.108.32.17/2/4","status":"online","container":"slot2_cm-1g-d12_E10220545/group2_E10220545"} {"name":"//10.108.32.17/2/5","status":"online","container":"slot2_cm-1g-d12_E10220545/group3_E10220545"} {"name":"//10.108.32.17/2/6","status":"online","container":"slot2_cm-1g-d12_E10220545/group3_E10220545"} {"name":"//10.108.32.17/2/7","status":"online","container":"slot2_cm-1g-d12_E10220545/group4_E10220545"} {"name":"//10.108.32.17/2/8","status":"online","container":"slot2_cm-1g-d12_E10220545/group4_E10220545"} {"name":"//10.108.32.17/2/9","status":"online","container":"slot2_cm-1g-d12_E10220545/group5_E10220545"} {"name":"//10.108.32.17/2/10","status":"online","container":"slot2_cm-1g-d12_E10220545/group5_E10220545"} {"name":"//10.108.32.17/2/11","status":"online","container":"slot2_cm-1g-d12_E10220545/group6_E10220545"} {"name":"//10.108.32.17/2/12","status":"online","container":"slot2_cm-1g-d12_E10220545/group6_E10220545"}"
		responseType="text"
		structuredData="
<structure xmlns:map="http://www.fnfr.com/svt/mapping">
    <isEmpty>false</isEmpty>
</structure>
"
		aliases
			isEmpty
				queryFormatString=".//isEmpty"
		duration="2.6"
Procedure getPortList
	1 eval set jsonPortList ""
		useFieldsInCommand="false"
	2 for {set slotNum 1} {$slotNum <= $slotCount} {incr slotNum}
		useFieldsInCommand="false"
		2.1 eval set portNum 1
			useFieldsInCommand="false"
		2.2 GET s2 objects/physicaltestmodule$slotNum
			analyze
				query mapped/Json/PortGroupCount
				store portGroupCount
			analyze
				query mapped/Json/PortCount
				store portCount
			analyze
				query mapped/Json/Model
				store modelNum
			analyze
				query mapped/Json/SerialNum
				store serialNum
			estimatedStepExecutionTime="0.226"
			action="objects/physicaltestmodule$slotNum"
			inherit="false"
			transferableToolId="com.fnfr.itest.applications.webservices.restful"
			memberClasses
				item="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry"
			item(transferableToolId="com.fnfr.itest.applications.webservices.restful")(transferableType="com.fnfr.itest.applications.webservices.properties.HTTPHeaderEntry")(header="X-STC-API-Session")(header.inherit="false")(value="$rndNum - velocity.driver")(value.inherit="false")
		2.3 for {set groupNum 1} {$groupNum <= $portGroupCount} {incr groupNum}
			useFieldsInCommand="false"
			2.3.1 for {set i 0} {$i < [expr $portCount / $portGroupCount]} {incr i}
				useFieldsInCommand="false"
				2.3.1.1 call addPortToJSON -portContainer slot[format %02i $slotNum]_${modelNum}_${serialNum}/group[format %02i $groupNum]_$serialNum -portStatus online -portName //[param property_ipAddress]/$slotNum/$portNum
					useFieldsInCommand="false"
					emulation
					response="{"name":"//10.108.32.17/2/12","status":"online","container":"slot2_cm-1g-d12_E10220545/group6_E10220545"}"
					responseType="text"
					structuredData="
<structure xmlns:map="http://www.fnfr.com/svt/mapping">
    <isEmpty>false</isEmpty>
</structure>
"
					aliases
						isEmpty
							queryFormatString=".//isEmpty"
				2.3.1.2 eval set jsonPortList [concat $jsonPortList $portJSON]
					useFieldsInCommand="false"
				2.3.1.3 eval incr portNum
					useFieldsInCommand="false"
	3 return $jsonPortList
Procedure addPortToJSON
	1 eval puts "portName: $portName"
		analyze
			query portName()
			store portName[return name]
		useFieldsInCommand="false"
	2 eval puts "portStatus: $portStatus"
		analyze
			query portStatus()
			store portStatus[return status]
		useFieldsInCommand="false"
	3 eval puts "portContainer: $portContainer"
		analyze
			query portContainer()
			store portContainer[return container]
		useFieldsInCommand="false"
Procedure deleteLabServerConnection
	1 DELETE s2 sessions/$rndNum%20-%20velocity.driver
============Parameters===============
parameters(escape="true")
	parameters
		call_count="1"
		call_0="getPorts"
		property_ipAddress="10.108.32.17"
		property_STC_Lab_Server="10.108.38.22"
